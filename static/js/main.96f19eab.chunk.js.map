{"version":3,"sources":["components/PostsList/PostsList.tsx","api/comments.ts","components/NewCommentForm/NewCommentForm.tsx","api/posts.ts","components/PostDetails/PostDetails.tsx","App.tsx","index.tsx"],"names":["PostsList","posts","selectPost","selectedPostId","className","map","post","userId","title","type","onClick","id","BASE_URL","getPostComments","postId","a","fetch","response","json","addComment","data","param","method","body","JSON","stringify","headers","result","NewCommentForm","addNewComment","useState","userName","setUserName","userEmail","setUserEmail","newComment","setNewComment","userError","setUserError","emailError","setEmailError","commentError","setCommentError","addInfo","event","target","value","name","Error","postNewComment","commentForCreate","email","onSubmit","preventDefault","trim","placeholder","onChange","required","getUserPosts","getPostDetails","PostDetails","setPost","comments","setComments","commentsVisible","setCommentsVisible","useEffect","postFromServer","commentsFromServer","handleRemoveComment","commentId","filter","el","length","state","comment","App","setPosts","setUserId","setSelectedPostId","postsFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.96f19eab.chunk.js","sourcesContent":["import React from 'react';\nimport './PostsList.scss';\n\ntype Props = {\n  posts: Post[];\n  selectPost: (id: number | null) => void;\n  selectedPostId: number | null;\n};\n\nexport const PostsList: React.FC<Props> = ({\n  posts,\n  selectPost,\n  selectedPostId,\n}) => {\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\" data-cy=\"postDetails\">\n        {posts.map((post) => (\n          <li className=\"PostsList__item\" key={post.id}>\n            <div>\n              <b>{`[User #${post.userId || 'no user'}]:` }</b>\n              {post.title}\n            </div>\n            <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              onClick={() => {\n                if (selectedPostId === post.id) {\n                  selectPost(null);\n                } else {\n                  selectPost(post.id);\n                }\n              }}\n            >\n              {selectedPostId === post.id ? 'Close' : 'Open'}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","const BASE_URL = 'https://mate.academy/students-api';\n\nexport async function getPostComments(postId: number): Promise<Commentary[]> {\n  const response = await fetch(`${BASE_URL}/comments?postId=${postId}`);\n\n  return response.json();\n}\n\nexport function removeComment(commentId: number) {\n  fetch(`${BASE_URL}/comments/${commentId}`, { method: 'DELETE' });\n}\n\ntype Data = Pick<Commentary, 'name' | 'email' | 'body' | 'postId'>;\n\nexport async function addComment(data: Data) {\n  const param = {\n    method: 'POST',\n    body: JSON.stringify(data),\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n  };\n  const result = await fetch(`${BASE_URL}/comments`, param);\n\n  return result.json();\n}\n","import React, { ChangeEvent, SyntheticEvent, useState } from 'react';\nimport './NewCommentForm.scss';\nimport { addComment } from '../../api/comments';\n\ntype Props = {\n  addNewComment: (obj: Commentary) => void;\n  postId: number;\n};\n\nexport const NewCommentForm: React.FC<Props> = ({ addNewComment, postId }) => {\n  const [userName, setUserName] = useState('');\n  const [userEmail, setUserEmail] = useState('');\n  const [newComment, setNewComment] = useState('');\n  const [userError, setUserError] = useState<string | null>(null);\n  const [emailError, setEmailError] = useState<string | null>(null);\n  const [commentError, setCommentError] = useState<string | null>(null);\n\n  const addInfo = (event:\n  ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { value, name } = event.target;\n\n    switch (name) {\n      case 'name':\n        setUserName(value);\n        setUserError(null);\n        break;\n\n      case 'email':\n        setUserEmail(value);\n        setEmailError(null);\n        break;\n\n      case 'body':\n        setNewComment(value);\n        setCommentError(null);\n        break;\n\n      default:\n        throw new Error('error');\n    }\n  };\n\n  const validate = () => {\n    if (!userName.trim()) {\n      setUserError('Please enter your name');\n\n      return false;\n    }\n\n    if (!userEmail.trim()) {\n      setEmailError('Please enter your email');\n\n      return false;\n    }\n\n    if (!newComment.trim()) {\n      setCommentError('Please enter your comment');\n\n      return false;\n    }\n\n    return true;\n  };\n\n  const postNewComment = async () => {\n    const commentForCreate = {\n      postId,\n      name: userName,\n      email: userEmail,\n      body: newComment,\n    };\n\n    const result = await addComment(commentForCreate);\n\n    addNewComment(result);\n  };\n\n  const submitForm = (event: SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (validate()) {\n      postNewComment();\n      setUserName('');\n      setUserEmail('');\n      setNewComment('');\n      setUserError(null);\n      setEmailError(null);\n      setCommentError(null);\n    }\n  };\n\n  return (\n    <form className=\"NewCommentForm\" onSubmit={submitForm}>\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={userName}\n          onChange={addInfo}\n        />\n      </div>\n      {userError && <p className=\"Form__error\">{userError}</p>}\n\n      <div className=\"form-field\">\n        <input\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={userEmail}\n          onChange={addInfo}\n          required\n        />\n      </div>\n      {emailError && <p className=\"Form__error\">{emailError}</p>}\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={newComment}\n          onChange={addInfo}\n        />\n      </div>\n      {commentError && <p className=\"Form__error\">{commentError}</p>}\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","const BASE_URL = 'https://mate.academy/students-api';\n\nexport async function getUserPosts(userId: number): Promise<Post[]> {\n  let response;\n\n  if (userId === 0) {\n    response = await fetch(`${BASE_URL}/posts`);\n  } else {\n    response = await fetch(`${BASE_URL}/posts?userId=${userId}`);\n  }\n\n  return response.json();\n}\n\nexport async function getPostDetails(postId: number): Promise<Post> {\n  const response = await fetch(`${BASE_URL}/posts/${postId}`);\n\n  return response.json();\n}\n","import React, { useEffect, useState } from 'react';\nimport { NewCommentForm } from '../NewCommentForm';\nimport { getPostDetails } from '../../api/posts';\nimport './PostDetails.scss';\nimport { getPostComments, removeComment } from '../../api/comments';\n\ntype Props = {\n  selectedPostId: number;\n};\n\nexport const PostDetails: React.FC<Props> = ({ selectedPostId }) => {\n  const [post, setPost] = useState<Post | null>(null);\n  const [comments, setComments] = useState<Commentary[]>([]);\n  const [commentsVisible, setCommentsVisible] = useState(false);\n\n  useEffect(() => {\n    async function result() {\n      const postFromServer = await getPostDetails(selectedPostId);\n      const commentsFromServer = await getPostComments(selectedPostId);\n\n      setComments(commentsFromServer);\n      setPost(postFromServer);\n    }\n\n    result();\n  }, [selectedPostId]);\n\n  const addNewComment = (newComment: Commentary) => {\n    setComments([...comments, newComment]);\n  };\n\n  const handleRemoveComment = (id: number) => {\n    removeComment(id);\n    setComments(comments.filter(el => el.id !== id));\n  };\n\n  return (\n    <div className=\"PostDetails\" data-cy=\"postDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{post?.body}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        {comments.length > 0 && (\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={() => setCommentsVisible(state => !state)}\n          >\n            {commentsVisible\n              ? `Hide ${comments.length} comments`\n              : `Show ${comments.length} comments`}\n          </button>\n        )}\n\n        {commentsVisible && (\n          <ul className=\"PostDetails__list\">\n            {comments.map((comment) => (\n              <li className=\"PostDetails__list-item\" key={comment.id}>\n                <button\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  onClick={() => handleRemoveComment(comment.id)}\n                >\n                  X\n                </button>\n                <p>{comment.body}</p>\n              </li>\n            ))}\n          </ul>\n        )}\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            addNewComment={addNewComment}\n            postId={selectedPostId}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n","import React, { ChangeEvent, useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getUserPosts } from './api/posts';\n\nconst App: React.FC = () => {\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [userId, setUserId] = useState(0);\n  const [selectedPostId, setSelectedPostId] = useState<null | number>(null);\n\n  useEffect(() => {\n    async function result() {\n      const postsFromServer = await getUserPosts(userId);\n\n      setPosts(postsFromServer);\n    }\n\n    result();\n  }, [userId]);\n\n  const selectUser = (event: ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    setUserId(+value);\n  };\n\n  const selectPost = (id: number | null) => {\n    setSelectedPostId(id);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            onChange={selectUser}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={posts}\n            selectPost={selectPost}\n            selectedPostId={selectedPostId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {selectedPostId && <PostDetails selectedPostId={selectedPostId} />}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}